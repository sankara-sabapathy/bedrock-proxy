

service: bedrock-proxy-service

frameworkVersion: "3"

plugins:
  - serverless-esbuild
  - serverless-offline

package: 
  individually: true

provider:
  name: aws
  runtime: nodejs18.x
  stage: dev
  region: us-west-2
  timeout: 30
  iam:
    role:
      statements:
        - Effect: "Allow"
          Action:
            - "bedrock:InvokeModel"
          Resource: '*'

custom:
  lambda:
    base:
      name: ${self:service}-${self:provider.stage}
      arn: arn:aws:lambda:${self:provider.region}:${AWS::AccountId}:function
    BedrockProxyLambda:
      name: ${self:custom.lambda.base.name}-function
      arn: ${self:custom.lambda.base.arn}:${self:custom.lambda.BedrockProxyLambda.name}
      
functions:
  BedrockProxyLambda:
    name: ${self:service}-${self:provider.stage}-function
    handler: index.handler


resources:
  Resources:
     BedrockProxyLambdaURL:
       Type: AWS::Lambda::Url
       Properties: 
        AuthType: NONE
        InvokeMode: RESPONSE_STREAM
        TargetFunctionArn: arn:aws:lambda:us-west-2:612850243659:function:bedrock-proxy-service-dev-function

